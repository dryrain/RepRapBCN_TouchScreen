#platform "uLCD-35DT"

// generated 24/08/2015 10:53:53


#inherit "4DGL_16bitColours.fnc"

#inherit "VisualConst.inc"


#inherit "RepRap_Touchv1Const.inc"

#inherit "CLPrintStrings.inc"

#constant IPDatasize 22

#CONST
    CMDLenMAX   80
    seroutX     $serout
    serinX      $serin
#END

#CONST
    ColorBGimage     0x0020
    ACK         0x06
    NAK         0x15
    ReadCmd     0x80
    WriteCmd    0x00
//  IPD_TYPE    0 // offsets are doubled as FLASH is byte addressable
    Ofs_IPD_P1      2
    Ofs_IPD_P2      4
    Ofs_IPD_P3      6
    Ofs_IPD_P4      8
    Ofs_IPD_P5      10
    Ofs_IPD_P6      12
    Ofs_IPD_P7      14
    Ofs_IPD_DOWN    16
    Ofs_IPD_RELEASE 18
    Ofs_IPD_OBJVIDX 20
// object indexes
    tDipSwitch      0
    tKnob           1
    tRockerSwitch   2
    tRotarySwitch   3
    tGSlider        4
    tTrackbar       5
    tWinButton      6
    tAngularmeter   7   // need to implement use of this, inputs must be ordered first
    tCoolgauge      8
    tCustomdigits   9
    tForm           10
    tGauge          11
    tImage          12
    tKeyboard       13  // this is a special input, does not need to be at front
    tLed            14
    tLeddigits      15
    tMeter          16
    tStrings        17  // also need output strings code
//    tStringUNI      0x3f | 0x40
//    tStringANSII    0x3f
    tThermometer    18
    tUserled        19
    tVideo          20
    tStaticText     21
// Remove, check for non visual objects instead
//    MaxVisObjects   21  // objects that have a visual component 
    tSounds         22
    tTimer          23
    tSpectrum       24
    tScope          25
    tTank           26
    tUserImages     27
    tPinOutput      28
    tPinInput       29 
    t4Dbutton       30    // more inputs 
    tAniButton      31
    tColorPicker    32 
    tUserButton     33     
    tMagicObject    34     
// tGradient, tBorder, tScale are not real objects, generated totally within Workshop
    MaxTotObjects   33 // objects in objects array
//    OT_DISPLAY      22
    OT_REPORT       100
    OT_SETCONST     101
    OT_SETANOTHER   102
    OT_ACTIVATE     103
    OT_NEXTFRAME    104
    OT_PREVFRAME    105
    OT_NEXTSTRING   106
    OT_PREVSTRING   107
    OT_MAGIC        108
// other OT_s Form activate,
// Indexes into LedDigits and CustomDigits arrays
    Ofs_Digits_Left           0
    Ofs_Digits_Digits         2
    Ofs_Digits_MinDigits      4
    Ofs_Digits_Widthdigit     6
    Ofs_Digits_LeadingBlanks  8
// indexes to Strings arrays
    Ofs_String_StartH        0
    Ofs_String_StartL        2
    Ofs_String_Size          4
    Ofs_String_x1            6
    Ofs_String_y1            8
    Ofs_String_x2            10
    Ofs_String_y2            12
    Ofs_String_FGColor       14
    Ofs_String_BGColor       16
    Ofs_String_FontAttribs   18
    Ofs_String_Transparent   20 // bit transparent should 'refresh' background, otherwise rectangle out
    Ofs_String_Ansi          22 // bit defines write/draw routine
    Ofs_String_Form          24 // form this string can be seen in
// Command codes
    READ_OBJ        0
    WRITE_OBJ       1
    WRITE_STR       2
    WRITE_STRU      3
    WRITE_CONTRAST  4
    REPORT_OBJ      5
    REPORT_EVENT    7
    WRITE_MAGIC_BYTES 8
    WRITE_MAGIC_DBYTES  9
    REPORT_MAGIC_EVENT_BYTES 10
    REPORT_MAGIC_EVENT_DBYTES 11
// End P1.inc
    nObjects        243
    nInputs         335
    nAniTimers      0
    nStrings        54
#END

#DATA
    word FormStartIndex 0, 1, 4, 9, 10, 15, 18, 167, 22, 42, 110, 97, 46, 47, 53, 60, 172, 177, 180, 66, 70, 74, 78, 84, 88, 183, 92, 99, 120, 127, 136, 140, 144, 148, 159, 163, 186, 186, 187, 200, 198, 224, 212, 228, 231
    word FormEndIndex 1, 4, 9, 10, 15, 18, 22, 172, 42, 46, 120, 99, 47, 53, 60, 66, 177, 180, 183, 70, 74, 78, 84, 88, 92, 186, 97, 110, 127, 136, 140, 144, 148, 159, 163, 167, 186, 187, 198, 212, 200, 228, 224, 231, 243
    word InputControls -1, -1, 0, 44, -1, 110, 176, 220, 264, -1, -1, 308, 374, 418, 462, -1, 506, 572, -1, 638, 682, 726, 770, 814, 858, 902, 946, 990, 1034, 1078, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1144, 1188, 1232, -1, 1276, 1320, 1364, -1, 1408, 1452, 1518, 1562, 1606, 1650, -1, 1694, 1738, 1782, -1, -1, -1, 1826, 1870, 1914, 1958, 1980, 2002, -1, 2024, 2068, -1, -1, 2112, 2156, 2200, -1, 2244, -1, -1, 2288, 2354, 2398, 2442, 2486, 2530, -1, 2574, 2618, 2662, -1, -1, 2706, -1, -1, 2750, 2772, -1, -1, -1, -1, -1, 2816, 2860, 2904, 2948, 2992, 3036, 3080, 3124, 3168, 3212, -1, 3256, 3300, 3344, 3388, 3432, 3476, 3520, 3564, 3608, -1, 3674, 3740, 3784, -1, -1, -1, -1, 3850, 3894, 3938, 3982, 4026, 4070, 4114, 4158, -1, -1, 4202, -1, -1, 4246, -1, -1, -1, 4290, -1, -1, -1, 4334, 4378, 4422, 4466, 4510, 4554, 4598, 4642, 4686, 4730, -1, 4774, 4818, 4862, -1, 4906, 4950, 4994, -1, -1, 5038, -1, 5082, -1, 5126, 5170, -1, -1, -1, 5214, 5258, -1, 5302, 5346, -1, 5390, 5434, 5478, -1, 5544, 5566, 5632, 5676, 5720, 5764, 5808, 5852, 5896, 5940, -1, -1, 5984, 6028, 6072, 6116, 6160, 6204, 6248, 6292, 6336, 6380, 6424, 6468, 6512, 6556, 6600, 6644, 6688, 6732, 6776, 6820, 6864, 6908, 6952, 6974, -1, 7018, -1, 7062, -1, 7106, 7150, -1, -1, 7194, 7216, 7238, 7260, 7282, 7304, 7326, -1, 7348
    word InputData tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 22, 4,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 66, 124,
                OT_ACTIVATE, 10, 9, 0, 18, 0, 0, 0, 0, 88, 0,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 132, 10,
                OT_ACTIVATE, 10, 5, 0, 18, 0, 0, 0, 0, 154, 0,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 198, 12,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 242, 30,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 286, 32,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 330, 14,
                OT_ACTIVATE, 10, 5, 0, 18, 0, 0, 0, 0, 352, 0,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 396, 16,
                OT_ACTIVATE, 10, 28, 0, 18, 0, 0, 0, 0, 0, 0,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 440, 18,
                OT_ACTIVATE, 10, 23, 0, 18, 0, 0, 0, 0, 0, 0,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 484, 20,
                OT_ACTIVATE, 10, 6, 0, 18, 0, 0, 0, 0, 0, 0,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 528, 26,
                OT_ACTIVATE, 10, 2, 0, 18, 0, 0, 0, 0, 550, 0,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 594, 28,
                OT_ACTIVATE, 10, 4, 0, 18, 0, 0, 0, 0, 616, 0,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
                tUserButton, 0, -1, -1, -1, -1, -1, -1, 0, 660, 2,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 704, 6,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 748, 102,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50,
                tWinButton, 1, -1, -1, -1, -1, -1, -1, 0, 792, 2,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                tWinButton, 1, -1, -1, -1, -1, -1, -1, 0, 836, 4,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                tWinButton, 1, -1, -1, -1, -1, -1, -1, 0, 880, 6,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
                tWinButton, 1, -1, -1, -1, -1, -1, -1, 0, 924, 8,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3,
                tWinButton, 1, -1, -1, -1, -1, -1, -1, 0, 968, 10,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
                tWinButton, 1, -1, -1, -1, -1, -1, -1, 0, 1012, 16,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7,
                tWinButton, 1, -1, -1, -1, -1, -1, -1, 0, 1056, 18,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 1100, 8,
                OT_ACTIVATE, 10, 4, 0, 18, 0, 0, 0, 0, 1122, 0,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
                tUserButton, 0, -1, -1, -1, -1, -1, -1, 0, 1166, 128,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 63,
                tWinButton, 1, -1, -1, -1, -1, -1, -1, 0, 1210, 12,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5,
                tWinButton, 1, -1, -1, -1, -1, -1, -1, 0, 1254, 14,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6,
                tUserButton, 0, -1, -1, -1, -1, -1, -1, 0, 1298, 38,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 1342, 40,
                OT_ACTIVATE, 10, 1, 0, 18, 0, 0, 0, 0, 0, 0,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 1386, 34,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 1430, 54,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 1474, 56,
                OT_ACTIVATE, 10, 14, 0, 18, 0, 0, 0, 0, 1496, 0,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 1540, 58,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 1584, 60,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 1628, 62,
                OT_ACTIVATE, 10, 18, 0, 18, 0, 0, 0, 0, 0, 0,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 1672, 64,
                OT_ACTIVATE, 10, 17, 0, 18, 0, 0, 0, 0, 0, 0,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 1716, 36,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 1760, 66,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 1804, 68,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 1848, 72,
                OT_ACTIVATE, 10, 22, 0, 18, 0, 0, 0, 0, 0, 0,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 1892, 74,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 1936, 76,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 37,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 0, 80,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 0, 82,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 0, 78,
                tUserButton, 0, -1, -1, -1, -1, -1, -1, 0, 2046, 106,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2090, 110,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2134, 152,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2178, 154,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2222, 156,
                OT_ACTIVATE, 10, 6, 0, 18, 0, 0, 0, 0, 0, 0,
                tUserButton, 0, -1, -1, -1, -1, -1, -1, 0, 2266, 108,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 53,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2310, 112,
                OT_ACTIVATE, 10, 4, 0, 18, 0, 0, 0, 0, 2332, 0,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2376, 114,
                OT_ACTIVATE, 10, 15, 0, 18, 0, 0, 0, 0, 0, 0,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2420, 116,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2464, 118,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2508, 120,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2552, 122,
                OT_ACTIVATE, 10, 17, 0, 18, 0, 0, 0, 0, 0, 0,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2596, 134,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2640, 138,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2684, 238,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118,
                tUserButton, 0, -1, -1, -1, -1, -1, -1, 0, 2728, 140,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 0, 144,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2794, 42,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2838, 44,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2882, 46,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2926, 104,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 2970, 146,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3014, 194,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3058, 196,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3102, 198,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3146, 200,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3190, 202,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3234, 204,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3278, 48,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3322, 50,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3366, 52,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3410, 148,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3454, 158,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 78,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3498, 160,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3542, 162,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3586, 164,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3630, 166,
                OT_ACTIVATE, 10, 9, 0, 18, 0, 0, 0, 0, 3652, 0,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3696, 24,
                OT_ACTIVATE, 10, 29, 0, 18, 0, 0, 0, 0, 3718, 0,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3762, 168,
                OT_ACTIVATE, 10, 43, 0, 18, 0, 0, 0, 0, 0, 0,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3806, 186,
                OT_ACTIVATE, 10, 4, 0, 18, 0, 0, 0, 0, 3828, 0,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3872, 170,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3916, 172,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 3960, 174,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4004, 176,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4048, 178,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4092, 180,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4136, 182,
                OT_ACTIVATE, 10, 28, 0, 18, 0, 0, 0, 0, 0, 0,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4180, 184,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4224, 188,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 93,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4268, 190,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4312, 192,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4356, 206,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4400, 208,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4444, 210,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4488, 212,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4532, 214,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4576, 216,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4620, 218,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4664, 220,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4708, 222,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4752, 224,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4796, 226,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4840, 228,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 113,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4884, 230,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4928, 232,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 115,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 4972, 234,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 5016, 236,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 5060, 100,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 5104, 22,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 5148, 84,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 5192, 86,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
                tUserButton, 0, -1, -1, -1, -1, -1, -1, 0, 5236, 88,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 5280, 90,
                OT_ACTIVATE, 10, 23, 0, 18, 0, 0, 0, 0, 0, 0,
                tUserButton, 0, -1, -1, -1, -1, -1, -1, 0, 5324, 92,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 45,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 5368, 94,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46,
                tUserButton, 0, -1, -1, -1, -1, -1, -1, 0, 5412, 96,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 5456, 98,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 5500, 126,
                OT_ACTIVATE, 10, 5, 0, 18, 0, 0, 0, 0, 5522, 0,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 0, 130,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 5588, 132,
                OT_ACTIVATE, 10, 9, 0, 18, 0, 0, 0, 0, 5610, 0,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 5654, 142,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 5698, 242,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 5742, 244,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 5786, 246,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
                tUserButton, 0, 1, -1, -1, -1, -1, -1, 0, 5830, 248,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
                tUserButton, 0, 1, -1, -1, -1, -1, -1, 0, 5874, 250,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
                tUserButton, 0, 1, -1, -1, -1, -1, -1, 0, 5918, 252,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
                tUserButton, 0, 1, -1, -1, -1, -1, -1, 0, 5962, 254,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6006, 270,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6050, 240,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6094, 256,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6138, 258,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6182, 260,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6226, 262,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6270, 264,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6314, 266,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6358, 268,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6402, 272,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6446, 274,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6490, 300,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6534, 276,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6578, 278,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6622, 280,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6666, 282,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 140,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6710, 284,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 141,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6754, 286,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6798, 288,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6842, 290,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6886, 292,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 145,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6930, 294,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 146,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 0, 296,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 6996, 302,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 7040, 136,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 7084, 298,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 7128, 70,
                OT_REPORT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 7172, 150,
                OT_ACTIVATE, 10, 28, 0, 18, 0, 0, 0, 0, 0, 0,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 0, 304,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 0, 306,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 0, 308,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 0, 310,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 0, 312,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 0, 314,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 0, 316,
                tUserButton, 1, -1, -1, -1, -1, -1, -1, 0, 0, 318
    word iStrings0  Strings0StartH, Strings0StartL, Strings0Size, 92, 208, 139, 240, WHITE, BLACK, 0, 0, 1, 9 
    word iStrings1  Strings1StartH, Strings1StartL, Strings1Size, 16, 172, 369, 296, WHITE, 0x017B, 0, 0, 1, 2 
    word iStrings2  Strings2StartH, Strings2StartL, Strings2Size, 16, 256, 323, 305, WHITE, BLACK, 0, 0, 1, 9 
    word iStrings3  Strings3StartH, Strings3StartL, Strings3Size, 64, 36, 263, 55, DARKGOLDENROD, BLANCHEDALMOND, 0, 1, 1, 3 
    word iStrings4  Strings4StartH, Strings4StartL, Strings4Size, 0, 0, 319, 16, WHITE, BLACK, 0, 1, 1, 8 
    word iStrings5  Strings5StartH, Strings5StartL, Strings5Size, 33, 216, 139, 246, WHITE, BLACK, 0, 0, 1, 44 
    word iStrings6  Strings6StartH, Strings6StartL, Strings6Size, 0, 0, 479, 19, WHITE, BLACK, 0, 0, 1, 9 
    word iStrings7  Strings7StartH, Strings7StartL, Strings7Size, 56, 148, 123, 199, WHITE, BLACK, 0, 0, 1, 10 
    word iStrings8  Strings8StartH, Strings8StartL, Strings8Size, 160, 148, 206, 199, WHITE, BLACK, 0, 0, 1, 10 
    word iStrings9  Strings9StartH, Strings9StartL, Strings9Size, 188, 208, 235, 240, WHITE, BLACK, 0, 0, 1, 9 

    word iStrings11  Strings11StartH, Strings11StartL, Strings11Size, 80, 164, 428, 218, WHITE, DEEPSKYBLUE, 0, 0, 1, 19 
    word iStrings12  Strings12StartH, Strings12StartL, Strings12Size, 192, 144, 298, 172, WHITE, BLACK, 0, 0, 1, 12 
    word iStrings13  Strings13StartH, Strings13StartL, Strings13Size, 44, 8, 79, 47, WHITE, BLACK, 0, 0, 1, 39 
    word iStrings14  Strings14StartH, Strings14StartL, Strings14Size, 0, 0, 319, 19, WHITE, BLACK, 0, 1, 1, 13 
    word iStrings15  Strings15StartH, Strings15StartL, Strings15Size, 0, 0, 319, 19, WHITE, BLACK, 0, 1, 1, 15 
    word iStrings16  Strings16StartH, Strings16StartL, Strings16Size, 215, 154, 281, 198, WHITE, BLACK, 0, 0, 1, 14 


    word iStrings19  Strings19StartH, Strings19StartL, Strings19Size, 152, 139, 342, 195, WHITE, DEEPSKYBLUE, 0, 0, 0, 17 




    word iStrings24  Strings24StartH, Strings24StartL, Strings24Size, 0, 0, 319, 19, WHITE, BLACK, 0, 1, 1, 22 
    word iStrings25  Strings25StartH, Strings25StartL, Strings25Size, 8, 100, 99, 121, WHITE, BLACK, 0, 1, 1, 22 
    word iStrings26  Strings26StartH, Strings26StartL, Strings26Size, 112, 100, 203, 121, WHITE, BLACK, 0, 1, 1, 22 
    word iStrings27  Strings27StartH, Strings27StartL, Strings27Size, 216, 100, 308, 121, WHITE, BLACK, 0, 1, 1, 22 

    word iStrings29  Strings29StartH, Strings29StartL, Strings29Size, 140, 144, 352, 208, WHITE, DEEPSKYBLUE, 0, 0, 1, 18 
    word iStrings30  Strings30StartH, Strings30StartL, Strings30Size, 140, 124, 330, 185, WHITE, DEEPSKYBLUE, 0, 0, 1, 25 
    word iStrings31  Strings31StartH, Strings31StartL, Strings31Size, 208, 155, 297, 194, WHITE, BLACK, 0, 0, 1, 38 
    word iStrings32  Strings32StartH, Strings32StartL, Strings32Size, 119, 88, 405, 130, WHITE, BLACK, 0, 0, 1, 38 

    word iStrings34  Strings34StartH, Strings34StartL, Strings34Size, 284, 208, 331, 240, WHITE, BLACK, 0, 0, 1, 9 

    word iStrings36  Strings36StartH, Strings36StartL, Strings36Size, 380, 208, 427, 240, WHITE, BLACK, 0, 0, 1, 9 
    word iStrings37  Strings37StartH, Strings37StartL, Strings37Size, 360, 256, 456, 307, WHITE, BLACK, 0, 0, 1, 9 
    word iStrings38  Strings38StartH, Strings38StartL, Strings38Size, 252, 148, 319, 199, WHITE, BLACK, 0, 0, 1, 10 
    word iStrings39  Strings39StartH, Strings39StartL, Strings39Size, 356, 148, 446, 199, WHITE, BLACK, 0, 0, 1, 10 
    word iStrings40  Strings40StartH, Strings40StartL, Strings40Size, 95, 260, 142, 292, WHITE, BLACK, 0, 0, 1, 28 
    word iStrings41  Strings41StartH, Strings41StartL, Strings41Size, 227, 260, 274, 292, WHITE, BLACK, 0, 0, 1, 28 
    word iStrings42  Strings42StartH, Strings42StartL, Strings42Size, 357, 260, 404, 292, WHITE, BLACK, 0, 0, 1, 28 
    word iStrings43  Strings43StartH, Strings43StartL, Strings43Size, 44, 148, 111, 199, WHITE, BLACK, 0, 0, 1, 29 
    word iStrings44  Strings44StartH, Strings44StartL, Strings44Size, 252, 148, 319, 199, WHITE, BLACK, 0, 0, 1, 29 
    word iStrings45  Strings45StartH, Strings45StartL, Strings45Size, 160, 148, 206, 199, WHITE, BLACK, 0, 0, 1, 29 
    word iStrings46  Strings46StartH, Strings46StartL, Strings46Size, 86, 8, 245, 50, WHITE, BLACK, 0, 0, 1, 39 
    word iStrings47  Strings47StartH, Strings47StartL, Strings47Size, 352, 25, 386, 66, WHITE, BLACK, 0, 0, 1, 42 
    word iStrings48  Strings48StartH, Strings48StartL, Strings48Size, 396, 25, 440, 67, WHITE, BLACK, 0, 0, 1, 42 
    word iStrings49  Strings49StartH, Strings49StartL, Strings49Size, 128, 80, 349, 129, WHITE, BLACK, 0, 0, 1, 40 
    word iStrings50  Strings50StartH, Strings50StartL, Strings50Size, 144, 144, 380, 179, WHITE, BLACK, 0, 0, 1, 40 
    word iStrings51  Strings51StartH, Strings51StartL, Strings51Size, 232, 183, 298, 227, WHITE, BLACK, 0, 0, 1, 34 
    word iStrings52  Strings52StartH, Strings52StartL, Strings52Size, 232, 183, 298, 227, WHITE, BLACK, 0, 0, 1, 35 
    word iStrings53  Strings53StartH, Strings53StartL, Strings53Size, 20, 76, 344, 207, WHITE, BLACK, 0, 0, 1, 41 
    word oDipSwitchs 0
    word oKnobs 0
    word oRockerSwitchs 0
    word oRotarySwitchs 0
    word oGSliders 0
    word oTrackbars 0
    word oWinButtons 9, iWinbutton0, iWinbutton1, iWinbutton2, iWinbutton3, iWinbutton4, iWinbutton5, iWinbutton6, iWinbutton7, iWinbutton8
    word oAngularmeters 0
    word oCoolgauges 0
    word oCustomdigitss 0
    word oForms 45, iForm0, iForm1, iForm2, -1, iForm4, iForm5, iForm6, iForm7, -1, iForm9, iForm10, iForm11, iForm12, -1, iForm14, -1, iForm16, iForm17, iForm18, iForm19, iForm20, iForm21, -1, iForm23, iForm24, iForm25, iForm26, iForm27, iForm28, iForm29, iForm30, iForm31, iForm32, iForm33, iForm34, iForm35, -1, -1, iForm38, -1, iForm40, iForm41, -1, -1, -1
    word oGauges 0
    word oImages 0
    word oKeyboards 0
    word oLeds 0
    word oLeddigitss 3, iLeddigits0, iLeddigits1, iLeddigits2
    word oMeters 0
    word oStringss 54, iStrings0, iStrings1, iStrings2, iStrings3, iStrings4, iStrings5, iStrings6, iStrings7, iStrings8, iStrings9, -1, iStrings11, iStrings12, iStrings13, iStrings14, iStrings15, iStrings16, -1, -1, iStrings19, -1, -1, -1, -1, iStrings24, iStrings25, iStrings26, iStrings27, -1, iStrings29, iStrings30, iStrings31, iStrings32, -1, iStrings34, -1, iStrings36, iStrings37, iStrings38, iStrings39, iStrings40, iStrings41, iStrings42, iStrings43, iStrings44, iStrings45, iStrings46, iStrings47, iStrings48, iStrings49, iStrings50, iStrings51, iStrings52, iStrings53
    word oThermometers 0
    word oUserleds 0
    word oVideos 1, iVideo0
    word oStaticTexts 20, iStatictext0, iStatictext1, iStatictext2, iStatictext3, iStatictext4, iStatictext5, iStatictext6, iStatictext7, iStatictext8, iStatictext9, iStatictext10, iStatictext11, iStatictext12, iStatictext13, -1, -1, -1, -1, -1, iStatictext19
    word oSpectrums 0
    word oScopes 0
    word oTanks 0
    word oUserImagess 19, iUserimages0, iUserimages1, iUserimages2, iUserimages3, iUserimages4, iUserimages5, iUserimages6, iUserimages7, iUserimages8, iUserimages9, iUserimages10, iUserimages11, iUserimages12, iUserimages13, iUserimages14, iUserimages15, iUserimages16, iUserimages17, iUserimages18
    word oPinInputs 0
    word o4Dbuttons 0
    word oAniButtons 0
    word oColorPickers 0
    word oUserButtons 159, iUserbutton0, iUserbutton1, iUserbutton2, iUserbutton3, iUserbutton4, iUserbutton5, iUserbutton6, iUserbutton7, iUserbutton8, iUserbutton9, iUserbutton10, iUserbutton11, iUserbutton12, iUserbutton13, iUserbutton14, iUserbutton15, iUserbutton16, iUserbutton17, iUserbutton18, iUserbutton19, iUserbutton20, iUserbutton21, iUserbutton22, iUserbutton23, iUserbutton24, iUserbutton25, iUserbutton26, iUserbutton27, iUserbutton28, iUserbutton29, iUserbutton30, iUserbutton31, iUserbutton32, iUserbutton33, iUserbutton34, iUserbutton35, iUserbutton36, iUserbutton37, iUserbutton38, iUserbutton39, iUserbutton40, iUserbutton41, iUserbutton42, iUserbutton43, iUserbutton44, iUserbutton45, iUserbutton46, iUserbutton47, iUserbutton48, iUserbutton49, iUserbutton50, iUserbutton51, iUserbutton52, iUserbutton53, iUserbutton54, iUserbutton55, iUserbutton56, iUserbutton57, iUserbutton58, iUserbutton59, iUserbutton60, iUserbutton61, iUserbutton62, iUserbutton63, iUserbutton64, iUserbutton65, iUserbutton66, iUserbutton67, iUserbutton68, iUserbutton69, iUserbutton70, iUserbutton71, iUserbutton72, iUserbutton73, iUserbutton74, iUserbutton75, iUserbutton76, iUserbutton77, iUserbutton78, iUserbutton79, iUserbutton80, iUserbutton81, iUserbutton82, iUserbutton83, iUserbutton84, iUserbutton85, iUserbutton86, iUserbutton87, iUserbutton88, iUserbutton89, iUserbutton90, iUserbutton91, iUserbutton92, iUserbutton93, iUserbutton94, iUserbutton95, iUserbutton96, iUserbutton97, iUserbutton98, iUserbutton99, iUserbutton100, iUserbutton101, iUserbutton102, iUserbutton103, iUserbutton104, iUserbutton105, iUserbutton106, iUserbutton107, iUserbutton108, iUserbutton109, iUserbutton110, iUserbutton111, iUserbutton112, iUserbutton113, iUserbutton114, iUserbutton115, iUserbutton116, iUserbutton117, iUserbutton118, iUserbutton119, iUserbutton120, iUserbutton121, iUserbutton122, iUserbutton123, iUserbutton124, iUserbutton125, iUserbutton126, iUserbutton127, iUserbutton128, iUserbutton129, iUserbutton130, iUserbutton131, iUserbutton132, iUserbutton133, iUserbutton134, iUserbutton135, iUserbutton136, iUserbutton137, iUserbutton138, iUserbutton139, iUserbutton140, iUserbutton141, iUserbutton142, iUserbutton143, iUserbutton144, iUserbutton145, iUserbutton146, iUserbutton147, iUserbutton148, iUserbutton149, iUserbutton150, iUserbutton151, iUserbutton152, iUserbutton153, iUserbutton154, iUserbutton155, iUserbutton156, iUserbutton157, iUserbutton158
    word oTimers 0
    word oSoundss 0
    word oPinOutputs 0
    word FormBGcolors ColorBGimage, ColorBGimage, ColorBGimage, 0x05FF, ColorBGimage, ColorBGimage, ColorBGimage, ColorBGimage, 0x05FF, ColorBGimage, ColorBGimage, ColorBGimage, ColorBGimage, 0x05FF, ColorBGimage, 0x05FF, ColorBGimage, ColorBGimage, ColorBGimage, ColorBGimage, ColorBGimage, ColorBGimage, 0x05FF, ColorBGimage, ColorBGimage, ColorBGimage, ColorBGimage, ColorBGimage, ColorBGimage, ColorBGimage, ColorBGimage, ColorBGimage, ColorBGimage, ColorBGimage, ColorBGimage, ColorBGimage, 0x05FF, 0x0000, ColorBGimage, 0x05FF, ColorBGimage, ColorBGimage, 0x05FF, 0x0BF8, 0x0BF8
    word kKeyboardKeystrokes -1
    word rKeyboardRoutines -1
    word oLedDigitsn 32, 3, 1, 21, 0,
                140, 3, 1, 21, 0,
                244, 3, 1, 21, 0
#END

var hFonts[54] ;
var stringsCV[54] := [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], hstrings ;
// Start P2.inc
var oObjects[MaxTotObjects+1] ;                 // address of objects
var CurrentForm ;
var TouchXpos, TouchYpos ;
var InputType, TouchState, CurInputData, pInputIndex ;
var comRX[40], cmd[CMDLenMAX] ;

var InputCS, OutputCS ;



func seroutCS(var op)
    serout(op) ;
    OutputCS ^= op ;
endfunc

func nak0()
    serout(NAK) ;
    InputCS := 0 ;
endfunc

func seroutOcs()
    serout(OutputCS) ;
    OutputCS := 0 ;
endfunc

func SendReport(var id, var objt, var objn, var val)
    seroutCS(id) ;
    seroutCS(objt) ;
    seroutCS(objn) ;
    seroutCS(val >> 8) ; // first 8 bits
    seroutCS(val) ;
    seroutOcs() ;
endfunc


func ReadObject(var ObjectType, var ObjectIdx)
    var j, k, Objects ;
    Objects := *(oObjects+ObjectType) ;

    j := 2 + ObjectIdx * 2 + Objects ;
     if (ObjectType == tForm)
        k := CurrentForm ;
    else if ((ObjectType == tCustomdigits) || (ObjectType == tLeddigits))
        k := img_GetWord(hndl, *j, IMAGE_TAG2);
    else if (ObjectType == tStrings)
        k := stringsCV[ObjectIdx];
        else
        k := img_GetWord(hndl, *j, IMAGE_INDEX);
        if (((ObjectType == tWinButton) || (ObjectType == tAniButton) || (ObjectType == tUserButton) || (ObjectType == t4Dbutton)) && (k)) k := 1 ; // this is not correct for blocked buttons and cannot be fixed as we cannot
                                                                                                                                                    // determine if button is momentary or not which is needed for correct answer.
    endif
    SendReport(REPORT_OBJ, ObjectType, ObjectIdx, k) ;
endfunc


func WriteObject(var ObjectType, var ObjectIdx, var NewVal)
    var i, j, k, Objects ;
    ObjectType &= 0x3f ;
    if (ObjectType == tForm)
        ActivateForm(ObjectIdx) ;
    else
        Objects := *(oObjects+ObjectType)+ObjectIdx*2+2 ;
        i := *(Objects) ;
        switch (ObjectType)
            case tWinButton :
                j := InputControls[oWinButtons[ObjectIdx+1]] ;
                break ;
            case tUserButton :
                j := InputControls[oUserButtons[ObjectIdx+1]] ;
                break ;
            default : j := -1 ;
        endswitch
        if (j != -1)
            k := img_GetWord(hndl, i , IMAGE_INDEX) ;
            NewVal := NewVal << 1 ;
            if (OVF())      // button group index change
                if (*(j+InputData+Ofs_IPD_P1))
                    k &= 1 ;    // mask off old group index for momentary
                else
                    k &= 3 ;    // mask off old group index for toggle
                endif
            else            // normal set
                if (*(j+InputData+Ofs_IPD_P2) != -1) TurnOffButtons(*(j+InputData+Ofs_IPD_P2)) ;
                k &= 0xfffc ;    // retain only group index for state set
            endif
            NewVal |= k ;
        endif
         if (ObjectType == tLeddigits)
            img_SetWord(hndl, i , IMAGE_TAG2, NewVal); // where state is 0 to 2
            ledDigitsDisplay(i, oLeddigitss, oLedDigitsn) ;
        else if (ObjectType == tStrings)
            PrintStrings(ObjectIdx, NewVal, 0);
        else
            img_SetWord(hndl, i , IMAGE_INDEX, NewVal); // where state is 0 to 2
            img_Show(hndl, i) ; // will only display if form is current
        endif
    endif
endfunc

func TurnOffButtons(var group)
    var j, k, l;
    for (j := 0; j < nInputs; j++)
        k := j*IPDatasize ;
        if (*(InputData+k+Ofs_IPD_P2) == group)
            l := -1 ;
             if (*(InputData+k) == tWinButton)
                l := oWinButtons[*(InputData+k+Ofs_IPD_OBJVIDX)/2] ;
                img_SetWord(hndl, l, IMAGE_INDEX, 0);
                img_Show(hndl, l);      // only shows on current form
            else if (*(InputData+k) == tUserButton)
                l := oUserButtons[*(InputData+k+Ofs_IPD_OBJVIDX)/2] ;
                img_SetWord(hndl, l, IMAGE_INDEX, img_GetWord(hndl, l, IMAGE_INDEX) & 0xfffc );
                img_Show(hndl, l);      // only shows on current form
            endif
        endif
    next
endfunc


// WARNING, this code will crash if newval exceeds maximum displayable number
func ledDigitsDisplay(var imgidx, var typeptr, var setptr)
    var i, j, k, l, lb, newval ;
    if (!((img_GetWord(hndl, imgidx, IMAGE_FLAGS) & I_ENABLED))) return ;  // ;img_GetWord(hndl, imgidx, IMAGE_TAG2) ;if diabled then exit
    newval := img_GetWord(hndl, imgidx, IMAGE_TAG2) ;
    i := -1 ;
    j := *(typeptr) ;
    repeat
        typeptr += 2 ;
        i++ ;
        until (*(typeptr) == imgidx);
    j := setptr + i*10 ;

    imgidx++ ;
    l := 1 ;
    for (i := 1; i < *(j+Ofs_Digits_Digits); i++)
        l *= 10 ;
    next
    lb := *(j+Ofs_Digits_LeadingBlanks) ;
    for (i := 0; i < *(j+Ofs_Digits_Digits); i++)
        k := newval / l ;
        newval -= k * l ;
        if ( lb && (i < *(j+Ofs_Digits_Digits) - *(j+Ofs_Digits_MinDigits)) )
            if (k == 0)
                k := 10 ;
            else
                lb := 0 ;
            endif
        endif
        l /= 10 ;
        img_SetWord(hndl, imgidx, IMAGE_INDEX, k);
        img_SetWord(hndl, imgidx, IMAGE_XPOS, *(j+Ofs_Digits_Left)+i* *(j+Ofs_Digits_Widthdigit)) ;
        img_Show(hndl, imgidx);
    next
endfunc


func ActivateForm(var newform)
    var i, j, *p ;

    if (CurrentForm != -1) // deactivate old form, by disabling all inputs
        for (i := FormStartIndex[CurrentForm]; i <= FormEndIndex[CurrentForm]; i++)
            if (img_GetWord(hndl, i, IMAGE_TAG))
                img_Disable(hndl,i) ;
            endif
        next
    endif
    CurrentForm := newform ;
    // display newform image or clear to image color
    if (FormBGcolors[CurrentForm] != ColorBGimage)
        gfx_Set(BACKGROUND_COLOUR,FormBGcolors[CurrentForm]);
        gfx_Cls() ;
        DoGFXObjects() ;                                    // display GFX 'widgets'
    endif

    // enable inputs
    for (i := FormStartIndex[CurrentForm]; i < FormEndIndex[CurrentForm]; i++)
        j := img_GetWord(hndl, i, IMAGE_TAG) ;
        if (j)
            j-- ;
            img_SetAttributes(hndl, i, I_STAYONTOP+I_ENABLED);        // make sure this is on top of form, if applicable
            //if (j != tKeyboard)
            if ((j <= tWinButton) || (j >= t4Dbutton) )               // enable inputs
                img_ClearAttributes(hndl, i, I_TOUCH_DISABLE);        // ensure touch is enabled
            endif
            img_Show(hndl,i) ; // show initialy, if required
            if (j == tForm)
                DoGFXObjects() ;                                    // display GFX 'widgets' for image backgruobds
            else if (j == tLeddigits)
                ledDigitsDisplay(i, oLeddigitss, oLedDigitsn) ;
            endif
        endif
    next
    for (i := 0; i < nStrings; i++)
        if (stringsCV[i] != -1)
            WriteObject(tStrings, i, stringsCV[i]) ;
        endif
    next

endfunc

func UpdateObjects(var newval)
    var IPidx, otherOBJ ;
    if ( ( img_GetWord(hndl, *(pInputIndex), IMAGE_INDEX) != newval) || (TouchState == Ofs_IPD_RELEASE) ) // only bother if values changed, or release

        img_SetWord(hndl, *(pInputIndex), IMAGE_INDEX, newval);
            img_Show(hndl, *(pInputIndex));      // only shows on current form
        if ((InputType == t4Dbutton) || (InputType == tUserButton) || (InputType == tWinButton))
            if (*(CurInputData+Ofs_IPD_P1))
                newval &= 1;
            else
                newval &= 3;
            endif
            if (newval > 1) newval := 1;
        endif
        IPidx := *(CurInputData+TouchState) ;
        while(IPidx != 0)
            otherOBJ := IPidx + InputData;
            if (*(otherOBJ) == OT_REPORT)
        SendReport(REPORT_EVENT, InputType, *(otherOBJ+Ofs_IPD_OBJVIDX), newval) ;
            else if (*(otherOBJ) == OT_MAGIC)
                IPidx := *(otherOBJ+Ofs_IPD_P5) ;
                IPidx(newval) ;
            else if (TouchState == *(otherOBJ+Ofs_IPD_P4))
                if (*(otherOBJ) == OT_ACTIVATE)
                    ActivateForm(*(otherOBJ+Ofs_IPD_P2) ) ;
                    InputType := tForm ;
                else if (*(otherOBJ) == OT_SETCONST)
                    newval := *(otherOBJ+Ofs_IPD_P3) ;
                    WriteObject(*(otherOBJ+Ofs_IPD_P1), *(otherOBJ+Ofs_IPD_P2), newval) ;
                else if (*(otherOBJ) == OT_SETANOTHER)
                    WriteObject(*(otherOBJ+Ofs_IPD_P1), *(otherOBJ+Ofs_IPD_P2), newval) ;
                else if (*(otherOBJ) == OT_PREVFRAME)
                    if (img_GetWord(hndl, *(otherOBJ+Ofs_IPD_P6), IMAGE_INDEX))
                        WriteObject(*(otherOBJ+Ofs_IPD_P5),*(otherOBJ+Ofs_IPD_P2),img_GetWord(hndl, *(otherOBJ+Ofs_IPD_P6), IMAGE_INDEX)-1) ;
                    endif
                    newval := img_GetWord(hndl, *(otherOBJ+Ofs_IPD_P6), IMAGE_INDEX) ;
                else if (*(otherOBJ) == OT_NEXTFRAME)
                    if (img_GetWord(hndl, *(otherOBJ+Ofs_IPD_P6), IMAGE_INDEX) < *(otherOBJ+Ofs_IPD_P3))
                        WriteObject(*(otherOBJ+Ofs_IPD_P5),*(otherOBJ+Ofs_IPD_P2),img_GetWord(hndl, *(otherOBJ+Ofs_IPD_P6), IMAGE_INDEX)+1) ;
                    endif
                    newval := img_GetWord(hndl, *(otherOBJ+Ofs_IPD_P6), IMAGE_INDEX) ;
                else if (*(otherOBJ) == OT_PREVSTRING)
                    if (stringsCV[*(otherOBJ+Ofs_IPD_P2)])
                        WriteObject(tStrings,*(otherOBJ+Ofs_IPD_P2),stringsCV[*(otherOBJ+Ofs_IPD_P2)]-1) ;
                    endif
                else if (*(otherOBJ) == OT_NEXTSTRING)
                    if (stringsCV[*(otherOBJ+Ofs_IPD_P2)] < *(otherOBJ+Ofs_IPD_P3)) // fix IPD_P2 not filled in yet
                        WriteObject(tStrings,*(otherOBJ+Ofs_IPD_P2),stringsCV[*(otherOBJ+Ofs_IPD_P2)]+1) ;
                    endif
                endif
            endif
            IPidx := *(otherOBJ+TouchState) ;
        wend
    endif
endfunc

// End P2.inc
func DoGFXObjects()
endfunc

// Start P3.inc
func main()
    var comTX[50], cmdi, i, j, ImageTouched, TouchStatus, oldn ;

    putstr("Mounting...\n");
    if (!(file_Mount()))
        while(!(file_Mount()))
            putstr("Drive not mounted...");
            pause(200);
            gfx_Cls();
            pause(200);
        wend
    endif
//    gfx_MoveTo(0, 0);
//    print(mem_Heap()," ") ;
//    gfx_TransparentColour(0x0020);
//    gfx_Transparency(ON);

    gfx_ScreenMode(LANDSCAPE) ;

    // open image control
    hndl := file_LoadImageControl("RepRap_T.dat", "RepRap_T.gci", 1);

    // init 'constants'
// End P3.inc

    oObjects[tDipSwitch] := oDipSwitchs ;
    oObjects[tKnob] := oKnobs ;
    oObjects[tRockerSwitch] := oRockerSwitchs ;
    oObjects[tRotarySwitch] := oRotarySwitchs ;
    oObjects[tGSlider] := oGSliders ;
    oObjects[tTrackbar] := oTrackbars ;
    oObjects[tWinButton] := oWinButtons ;
    oObjects[tAngularmeter] := oAngularmeters ;
    oObjects[tCoolgauge] := oCoolgauges ;
    oObjects[tCustomdigits] := oCustomdigitss ;
    oObjects[tForm] := oForms ;
    oObjects[tGauge] := oGauges ;
    oObjects[tImage] := oImages ;
    oObjects[tKeyboard] := oKeyboards ;
    oObjects[tLed] := oLeds ;
    oObjects[tLeddigits] := oLeddigitss ;
    oObjects[tMeter] := oMeters ;
    oObjects[tStrings] := oStringss ;
    oObjects[tThermometer] := oThermometers ;
    oObjects[tUserled] := oUserleds ;
    oObjects[tVideo] := oVideos ;
    oObjects[tStaticText] := oStaticTexts ;
    oObjects[tSounds] := oSoundss ;
    oObjects[tTimer] := oTimers ;
    oObjects[tSpectrum] := oSpectrums ;
    oObjects[tTank] := oTanks ;
    oObjects[tUserImages] := oUserImagess ;
    oObjects[tPinOutput] := oPinOutputs ;
    oObjects[tPinInput] := oPinInputs ;
    oObjects[t4Dbutton] := o4Dbuttons ;
    oObjects[tAniButton] := oAniButtons ;
    oObjects[tColorPicker] := oColorPickers ;
    oObjects[tUserButton] := oUserButtons ;
    hFonts[0] := file_LoadImageControl("RepRap_T.d03", "RepRap_T.g03", 1)  ;
    hFonts[1] := file_LoadImageControl("RepRap_T.d01", "RepRap_T.g01", 1)  ;
    hFonts[2] := file_LoadImageControl("RepRap_T.d02", "RepRap_T.g02", 1)  ;
    hFonts[3] := FONT3 ;
    hFonts[4] := FONT3 ;
    hFonts[5] := file_LoadImageControl("RepRap_T.d0C", "RepRap_T.g0C", 1)  ;
    hFonts[6] := FONT3 ;
    hFonts[11] := file_LoadImageControl("RepRap_T.d06", "RepRap_T.g06", 1)  ;
    hFonts[12] := file_LoadImageControl("RepRap_T.d05", "RepRap_T.g05", 1)  ;
    hFonts[13] := file_LoadImageControl("RepRap_T.d0B", "RepRap_T.g0B", 1)  ;
    hFonts[14] := FONT3 ;
    hFonts[15] := FONT3 ;
    hFonts[16] := FONT3 ;
    hFonts[24] := FONT3 ;
    hFonts[25] := file_LoadImageControl("RepRap_T.d07", "RepRap_T.g07", 1)  ;
    hFonts[31] := file_LoadImageControl("RepRap_T.d08", "RepRap_T.g08", 1)  ;
    hFonts[37] := file_LoadImageControl("RepRap_T.d04", "RepRap_T.g04", 1)  ;
    hFonts[49] := file_LoadImageControl("RepRap_T.d09", "RepRap_T.g09", 1)  ;
    hFonts[50] := file_LoadImageControl("RepRap_T.d0@", "RepRap_T.g0@", 1)  ;
    hFonts[51] := FONT3 ;
    hFonts[52] := FONT3 ;
    hFonts[7] := hFonts[37] ;
    hFonts[8] := hFonts[37] ;
    hFonts[9] := hFonts[0] ;
    hFonts[19] := hFonts[11] ;
    hFonts[26] := hFonts[25] ;
    hFonts[27] := hFonts[25] ;
    hFonts[29] := hFonts[11] ;
    hFonts[30] := hFonts[11] ;
    hFonts[32] := hFonts[31] ;
    hFonts[34] := hFonts[0] ;
    hFonts[36] := hFonts[0] ;
    hFonts[38] := hFonts[37] ;
    hFonts[39] := hFonts[37] ;
    hFonts[40] := hFonts[0] ;
    hFonts[41] := hFonts[0] ;
    hFonts[42] := hFonts[0] ;
    hFonts[43] := hFonts[37] ;
    hFonts[44] := hFonts[37] ;
    hFonts[45] := hFonts[37] ;
    hFonts[46] := hFonts[13] ;
    hFonts[47] := hFonts[13] ;
    hFonts[48] := hFonts[13] ;
    hFonts[53] := hFonts[50] ;
// Start P4.inc
    hstrings := file_Open("RepRap_T.txf", 'r') ; // Open handle to access uSD strings, uncomment if required
    // init comms
    com_Init(comRX,CMDLenMAX,0);
    com_SetBaud(COM0,19886);
    com_TXbuffer(comTX, 100, 0);
    snd_BufSize(2) ;
    // tag 'real' objects
    for (i := 0; i <= MaxTotObjects; i++)
        if (   (i != tSounds)
            && (i != tTimer)
            && (i != tPinOutput)
            && (i != tPinInput) )
            TouchXpos := oObjects[i] ;
            TouchYpos := *(TouchXpos) ;
            for (ImageTouched := 1; ImageTouched <= TouchYpos; ImageTouched++)
                oldn := *(TouchXpos+ImageTouched*2) ;
                img_SetAttributes(hndl, oldn, I_TOUCH_DISABLE);  // ensure touch is enabled
                if (oldn != -1)
                    img_SetWord(hndl, oldn, IMAGE_TAG, i+1);
                    img_Disable(hndl, oldn) ;
                endif
            next
        endif
    next

    // display initial form
    CurrentForm := -1 ;
    ActivateForm(0) ; // need to change this according to first actual form

// End P4.inc
// Start P5.inc
    touch_Set(TOUCH_ENABLE);                            // enable the touch screen
    oldn := -1 ;
    repeat

        // check comms for command, how to NAK invalid command
        if (com_Count() != 0)
            i := serin() ;
            InputCS ^= i ;               // update checksum
            if (   (cmdi > 2)
                && (cmd[0] == WRITE_STRU) )
                j := (cmdi-1) >> 1 + 2 ;
                if (j == CMDLenMAX)    // max length exceeded
                    nak0() ;
                    cmdi := -1 ;
                else if (cmdi & 1)
                    cmd[j] := i ;
                    if (cmd[2] == 0)    // if string complete
                        if (InputCS)
                            nak0() ;
                        else
                            if (cmd[0] == WRITE_STRU)
                            cmd[j] := 0 ;                     // terminate it
                            PrintStrings(cmd[1], &cmd[3], 1) ;
                            serout(ACK) ;
                            else
                            endif
                        endif
                        cmdi := -1 ;
                    endif
                else
                    cmd[j] := cmd[j] << 8 + i ;
                    cmd[2]-- ;          // dec length
                endif
                cmdi++ ;
            else // not unicode string
                cmd[cmdi++] := i ;
                 if (cmd[0] == WRITE_STR)                  // Ansi String
                    if (cmdi == CMDLenMAX)      // max length exceeded
                        nak0() ;
                        cmdi := 0 ;
                    else if (cmdi > 2)
                        if (cmd[2] == -1)
                            if (InputCS)
                                nak0() ;
                            else
                                if (cmd[0] == WRITE_STR)
                                cmd[cmdi-1] := 0 ;                     // terminate it
                                PrintStrings(cmd[1], &cmd[3], 1) ;
                                serout(ACK) ;
                                else
                                endif
                            endif
                            cmdi := 0 ;
                        else
                            cmd[2]-- ;          // dec length
                        endif
                    endif
                else if (   (cmd[0] == READ_OBJ)
                         && (cmdi == 4)         )
                    if (InputCS)
                        nak0() ;
                    else
                        ReadObject(cmd[1], cmd[2]) ;
                    endif
                    cmdi := 0 ;
                else if (   (cmd[0] == WRITE_OBJ)    // 6 byte write command (gen option)
                         && (cmdi == 6)          )
                    if (InputCS)
                        nak0() ;
                    else
                        WriteObject(cmd[1], cmd[2], cmd[3] << 8 + cmd[4]) ;
                        serout(ACK) ;
                    endif
                    cmdi := 0 ;
                else if (   (cmd[0] == WRITE_CONTRAST)
                         && (cmdi == 3)         )
                    if (InputCS)
                        nak0() ;
                    else
                        gfx_Contrast(cmd[1]) ;
                        serout(ACK) ;
                    endif
                    cmdi := 0 ;
                else if (cmdi == 6)    // we have 6 bytes and we've gotten here -> something wrong
                    nak0() ;
                    cmdi := 0 ;
                endif
            endif   // not unicode string
        endif   // a character is available


    // touch code processing

        TouchStatus := touch_Get(TOUCH_STATUS);               // get touchscreen status
        ImageTouched := img_Touched(hndl,-1) ;
        if ((TouchStatus == TOUCH_PRESSED) || (TouchStatus == TOUCH_RELEASED) || (TouchStatus == TOUCH_MOVING))
            if ((TouchStatus != TOUCH_RELEASED) && (ImageTouched != oldn) && (oldn != -1))
                TouchStatus := TOUCH_RELEASED ;       // simulate release if we move off object
            endif
            if (TouchStatus != TOUCH_RELEASED)        // if not released
                if (oldn != -1)
                    ImageTouched := oldn ;
                else
                    if (oldn != ImageTouched)
                oldn := ImageTouched ;
                        TouchStatus := TOUCH_PRESSED ;
                    endif
                endif
                TouchXpos  := touch_Get(TOUCH_GETX);
                TouchYpos  := touch_Get(TOUCH_GETY);
                TouchState := Ofs_IPD_DOWN ;
            else
                ImageTouched := oldn ;                     // simulate release of what we touched
                oldn := -1 ;                    // prevent double release
                TouchState := Ofs_IPD_RELEASE ;
            endif
            if (ImageTouched != -1)
                        CurInputData := InputControls[ImageTouched] + InputData;
                        InputType := *(CurInputData) ;
                        i := InputType ;
                        if (InputType >= t4Dbutton) i -= 23 ; // adjust to ensure next in gosub
                        gosub (i), (cDipswitch, cKnob, cRockerswitch, cRotaryswitch, cSlider, cTrackbar, cWinbutton, c4DButton, cAniButton, cColorPicker, cUserButton) ;
            endif
        endif
 //       if ((n != -1) && (oldn == -1)) oldn := n ;    // save what we touched in case we move off it

        sys_EventsResume() ;
    forever

cDipswitch:

cKnob:

cRockerswitch:

cRotaryswitch:

cSlider:
cTrackbar:

c4DButton:
cUserButton:
    pInputIndex := oUserButtons + *(CurInputData+Ofs_IPD_OBJVIDX) ;
    goto gbutton ;
cWinbutton:
    pInputIndex := oWinButtons + *(CurInputData+Ofs_IPD_OBJVIDX) ;
gbutton:
    i := img_GetWord(hndl, *(pInputIndex), IMAGE_INDEX) ; // current state
    if (*(CurInputData+Ofs_IPD_P1))                                 // momentary, reports 0, but should report 1
        if (TouchStatus == TOUCH_RELEASED)
            i &= 0xfffe ;
            TouchState == Ofs_IPD_DOWN ;
        else
            i |= 1 ;
            TouchState == Ofs_IPD_RELEASE ;
        endif
    else if (*(CurInputData+Ofs_IPD_P2) == -1)                      // Toggle, reports 0+2, but should report 0+1
        if (TouchStatus == TOUCH_RELEASED)                     // only truly change on release
            if ((i & 3) == 3)
                i &= 0xfffc ;
            else
                i++ ;
            endif
        else
            i |= 1 ;                                      // make down regardless of current state
        endif
    else                        // group action, up all other buttons on touch press, reports 0 for button down
        if (TouchStatus == TOUCH_PRESSED)                     // only truly change on release
            TurnOffButtons(*(CurInputData+Ofs_IPD_P2)) ;
        endif
        i := (i & 0xfffc) | 2 ;
    endif

    UpdateObjects(i) ;
endsub ;

cAniButton:

cColorPicker:

endfunc
// End P5.inc
